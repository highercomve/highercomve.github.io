{"version":3,"sources":["component-builder.js"],"names":["window","TEXT_NODE","ELEMENT_NODE","defaultTemplate","consoleThis","console","log","arguments","updateAttributes","node1","node2","nodeType","node1Attributes","getAttributeNames","sort","node2Attributes","newLength","length","oldLength","i","attr1Name","attr2Name","setAttribute","getAttribute","removeAttribute","emptyTextNode","node","nodeValue","trim","isTypeOfComponentBuilder","localName","split","updateElement","$parent","newNode","oldNode","index","notUpdate","changed","textContent","replaceChild","childNodes","newChildren","oldChildren","removeChild","appendChild","mountedWrapper","options","updateComponent","call","setEvents","events","listeners","Object","keys","forEach","key","type","selector","cb","eventFunction","event","isChildrenOf","querySelectorAll","some","element","contains","target","matches","push","addEventListener","bind","connectedCallback","render","renderTxt","replace","renderTemplate","innerHTML","container","newContent","content","cloneNode","children","lastContent","onChange","name","oldValue","newValue","CreateComponent","isRequired","message","Error","elemMethods","clone","obj","list","include","reduce","result","includes","Component","_","Reflect","construct","HTMLElement","document","createElement","attachShadow","mode","template","shadowRoot","onCreated","prototype","create","constructor","value","enumerable","writable","configurable","disconnectedCallback","unSetEvents","listener","removeEventListener","attributeChangedCallback","adoptedCallback","cbName","descriptorKeys","defineProperty","observedAttributes","get","customElements","define"],"mappings":"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","file":"component-builder.f0584831.map","sourceRoot":"../src","sourcesContent":["(function (window) {\n  'use strict';\n  var TEXT_NODE = 3\n  var ELEMENT_NODE = 1\n  var DOCUMENT_FRAGMENT_NODE = 11\n  var defaultTemplate = `\n    <style>\n      :host {\n        display: block;\n        contain: content; /* CSS containment FTW. */\n      }\n    </style>\n    <slot></slot>\n  `\n\n  function consoleThis () {\n    console.log(...arguments)\n  }\n  \n  function updateAttributes (node1, node2) {\n    if (node1.nodeType !== ELEMENT_NODE || node1.nodeType !== ELEMENT_NODE) {\n      return\n    }\n    var node1Attributes = node1.getAttributeNames().sort()\n    var node2Attributes = node2.getAttributeNames().sort()\n    var newLength = node1Attributes.length\n    var oldLength = node2Attributes.length\n    for (var i = 0; i < newLength || i < oldLength; i++) {\n      var attr1Name = node1Attributes[i]\n      var attr2Name = node2Attributes[i]\n      if (!attr2Name || attr1Name === attr1Name) {\n        node2.setAttribute(attr1Name, node1.getAttribute(attr1Name))\n      }\n      if (!attr1Name) {\n        node2.removeAttribute(attr2Name)\n      }\n    }\n  }\n\n  function changed (node1, node2) {\n    return typeof node1 !== typeof node2 ||\n      typeof node1 === 'string' && node1 !== node2 ||\n      node1.nodeType === TEXT_NODE && node1.textContent !== node2.textContent ||\n      node1.nodeType !== node2.nodeType\n  }\n\n  function emptyTextNode (node) {\n    return node && node.nodeType === TEXT_NODE && node.nodeValue.trim() === ''\n  }\n\n  function isTypeOfComponentBuilder (node) {\n    return node && node.localName && node.localName.split('-').length > 1\n  }\n\n  function updateElement ($parent, newNode, oldNode, index = 0) {\n    var notUpdate = (!oldNode && !newNode) \n                      || (emptyTextNode(newNode) && emptyTextNode(oldNode)) \n    if (notUpdate) {\n      return\n    }\n    if (!oldNode) {\n      $parent.appendChild(\n        newNode\n      );\n      return\n    }\n    if (!newNode) {\n      $parent.removeChild(\n        $parent.childNodes[index]\n      );\n      return\n    }\n    if (isTypeOfComponentBuilder(newNode) && isTypeOfComponentBuilder(oldNode)) {\n      updateAttributes(newNode, oldNode)\n      return\n    }\n    if (changed(newNode, oldNode)) {\n      $parent.replaceChild(\n        newNode,\n        $parent.childNodes[index]\n      );\n      return\n    }\n    if (newNode) {\n      var newLength = newNode.childNodes.length;\n      var oldLength = oldNode.childNodes.length;\n      updateAttributes(newNode, oldNode)\n      var newChildren = [...newNode.childNodes]\n      var oldChildren = [...oldNode.childNodes]\n      for (var i = 0; i < newLength || i < oldLength; i++) {\n        updateElement(\n          $parent.childNodes[index],\n          newChildren[i],\n          oldChildren[i],\n          i\n        );\n      }\n    }\n  }\n\n  function clone (obj, list = [], include = true) {\n    return Object.keys(obj).reduce((result, key) => {\n      if (list.includes(key) === include) {\n        result[key] = obj[key]\n      }\n      return result\n    }, {})\n  }\n\n  function setEvents (events) {\n    this.listeners = []\n    Object.keys(events || {}).forEach((key) => {\n      var type = key.split(/\\ (.+)/)[0]\n      var selector = key.split(/\\ (.+)/)[1]\n      var cb = events[key]\n      var eventFunction = function (event) {\n        var isChildrenOf = [...this.querySelectorAll(selector)].some((element) => {\n          return element.contains(event.target)\n        })\n        if (event.target && (isChildrenOf || event.target.matches(selector))) {\n          cb.call(this, ...arguments)\n        }\n      }\n      this.listeners.push({ type, eventFunction })\n      this.addEventListener(type, eventFunction.bind(this))\n    })\n  }\n\n  function unSetEvents () {\n    this.listeners.forEach((listener) => {\n      this.removeEventListener(listener.type, listener.eventFunction)\n    })\n  }\n\n  function mountedWrapper (options) {\n    return function onMounted () {\n      updateComponent.call(this)\n      setEvents.call(this, options.events)\n      return options.connectedCallback\n        ? options.connectedCallback.call(this)\n        : consoleThis.call(this)\n    }\n  }\n\n  function updateComponent () {\n    if (!this.render) {\n      return\n    }\n    var renderTxt = this.render(this).replace(/[\\n\\r]+/g, '')\n    this.renderTemplate.innerHTML = `<div>${renderTxt}</div>`\n    var container = this\n    var newContent = this.renderTemplate.content.cloneNode(true).children[0]\n    var lastContent = container.children[0]\n    if (!lastContent || newContent.innerHTML !== lastContent.innerHTML) {\n      updateElement(container, newContent, lastContent)\n    }\n  }\n\n  function onChange (name, oldValue, newValue) {\n    if (oldValue !== newValue) {\n      updateComponent.call(this)\n    }\n  }\n\n  function disconnectedWrapper (cb) {\n    return function disconnectedCallback () {\n      unSetEvents.call(this)\n      if (cb) {\n        cb.call(this)\n      }\n    }\n  }\n\n  function isRequired (message) {\n    throw new Error(message)\n  }\n\n  window.CreateComponent = function (name = isRequired('name is required'), options = {}) {\n    var elemMethods = clone(\n      options,\n      [\n        'onCreated',\n        'connectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'disconnectedCallback',\n        'observedAttributes',\n        'events'\n      ],\n      false\n    )\n\n    function Component() {\n      var _ = Reflect.construct(HTMLElement, [], new.target)\n      _.renderTemplate = document.createElement('template')\n      _.attachShadow({mode: 'open'})\n      if (options.template && options.template.nodeType) {\n        _.shadowRoot.appendChild(options.template.content.cloneNode(true))\n      } else {\n        _.shadowRoot.innerHTML = (options.template || defaultTemplate).replace(/[\\n\\r]+/g, '')\n      }\n      _.onCreated.call(_)\n      _.updateComponent.call(_)\n      return _\n    }\n\n    Component.prototype = Object.create(HTMLElement.prototype, {\n      constructor: { value: Component, enumerable: false, writable: true, configurable: true }\n    })\n    Component.prototype.render = options.render\n    Component.prototype.connectedCallback = mountedWrapper(options)\n    Component.prototype.disconnectedCallback = disconnectedWrapper(options.disconnectedCallback || consoleThis.bind(null, 'disconnectedCallback'))\n    Component.prototype.attributeChangedCallback = options.attributeChangedCallback || onChange || consoleThis.bind(null, 'onChange')\n    Component.prototype.adoptedCallback = options.adoptedCallback || consoleThis.bind(null, 'adoptedCallback')\n    Component.prototype.onCreated = options.onCreated || consoleThis.bind(null, 'onCreated')\n    Component.prototype.updateComponent = updateComponent\n    Component.prototype.onChange = onChange\n    Component.prototype.cbName = name\n\n    Object.keys(elemMethods).forEach((key) => {\n      var descriptorKeys = ['configurable', 'enumerable', 'value', 'writable', 'get', 'set']\n      var isDescriptor = elemMethods[key] &&\n                            typeof elemMethods[key] === 'object' &&\n                            Object.keys(elemMethods[key]).some((key) => descriptorKeys.includes(key))\n      if (isDescriptor) {\n        Object.defineProperty(Component.prototype, key, elemMethods[key])\n      } else {\n        Component.prototype[key] = elemMethods[key]\n      }\n    })\n    if (options.observedAttributes) {\n      Object.defineProperty(Component, 'observedAttributes', {\n        configurable: true,\n        get: options.observedAttributes\n      })\n    }\n\n    customElements.define(name, Component);\n    return Component;\n  }\n})(window)\n"]}